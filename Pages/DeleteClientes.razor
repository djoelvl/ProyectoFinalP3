@page "/DeleteClientes/{CurrentID}"
@using Final.Data
@inject ClienteService Service
@inject NavigationManager NavigationManager

<h2>Eliminar Cliente</h2>
<hr />
<h3>Estas seguro que quieres borrar esto?</h3>
<div class="row">
    <div class="form-group col-md-4">
        <label>Cliente ID:</label>
        <label>@cliente.Cliente_Id</label>
    </div>
    <div class="form-group col-md-4">
        <label>RNC:</label>
        <label>@cliente.RNC</label>
    </div>
    <div class="form-group col-md-4">
        <label>Nombre:</label>
        <label>@cliente.Nombre</label>
    </div>
    <div class="form-group col-md-4">
        <label>Direccion:</label>
        <label>@cliente.Direccion</label>
    </div>
    <div class="form-group col-md-4">
        <label>Latitud:</label>
        <label>@cliente.Latitud</label>
    </div>
    <div class="form-group col-md-4">
        <label>Longitud:</label>
        <label>@cliente.Longitud</label>
    </div>
    <div class="form-group col-md-4">
        <label>Correo:</label>
        <label>@cliente.Correo</label>
    </div>
    <div class="form-group col-md-4">
        <label>Fecha:</label>
        <label>@cliente.Fecha</label>
    </div>

</div>
<div class="row">
    <div class="col-md-4">
        <div class="form-group">
            <input type="button" class="btn btn-primary" @onclick="@BorrarCliente" value="Delete" />
            <input type="button" class="btn btn-danger" @onclick="@Cancel" value="Cancel" />

        </div>

    </div>

</div>

@code { [Parameter]
    public string CurrentID { get; set; }
    ClienteFinal cliente = new ClienteFinal();


    protected override async Task OnInitializedAsync()
    {
        cliente = await Task.Run(() => Service.GetClienteById(Convert.ToInt32(CurrentID)));

    }

    protected void BorrarCliente()
    {
        Service.DeleteCliente(cliente);
        NavigationManager.NavigateTo("ClienteInfo");
    }
    void Cancel()
    {
        NavigationManager.NavigateTo("ClienteInfo");

    } }